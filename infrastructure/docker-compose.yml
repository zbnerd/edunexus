version: '3'
services:
  edu-nexus-mysql:
    image: mysql:8.0
    container_name: edu-nexus-mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: fast
      TZ: Asia/Seoul
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d
      - ./db/mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
    platform: linux/x86_64
    networks:
      - edu-nexus-network

  edu-nexus-redis:
    image: redis:7.0
    container_name: edu-nexus-redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - ./db/redis/data:/data
    command: ["redis-server", "--appendonly", "yes"] # Enable data persistence
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    platform: linux/x86_64
    networks:
      - edu-nexus-network

  zookeeper:
    image: 'bitnami/zookeeper:3.7.2'
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./.data/zookeeper/data:/bitnami/zookeeper/data
      - ./.data/zookeeper/datalog:/bitnami/zookeeper/datalog
      - ./.data/zookeeper/logs:/bitnami/zookeeper/logs

  kafka1:
    image: 'bitnami/kafka:3.6.0'
    container_name: kafka1
    hostname: kafka1
    ports:
      - 19092
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:19092,EXTERNAL://localhost:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka1:/bitnami/kafka/data
    networks:
      - edu-nexus-network

  kafka2:
    image: 'bitnami/kafka:3.6.0'
    container_name: kafka2
    ports:
      - 19092
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:19092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka2:/bitnami/kafka/data
    networks:
      - edu-nexus-network

  kafka3:
    image: 'bitnami/kafka:3.6.0'
    container_name: kafka3
    ports:
      - 19092
      - "9094:9094"
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:19092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka3:/bitnami/kafka/data
    networks:
      - edu-nexus-network

  kafka-ui:
    image: 'provectuslabs/kafka-ui:v0.7.1'
    container_name: kafka-ui
    ports:
      - "8089:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:19092,kafka2:19092,kafka3:19092
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
    networks:
      - edu-nexus-network

  edu-nexus-discovery:
    image: edu-nexus-discovery:latest
    container_name: edu-nexus-discovery
    ports:
      - "8000:8000"
    networks:
      - edu-nexus-network

  edu-nexus-graphql:
    image: edu-nexus-graphql:latest
    container_name: edu-nexus-graphql
    ports:
      - "8006:8006"
    depends_on:
      - edu-nexus-discovery
    networks:
      - edu-nexus-network

  edu-nexus-course-service:
    image: edu-nexus-course-service:latest
    container_name: edu-nexus-course-service
    ports:
      - "8001:8001"
    depends_on:
      - edu-nexus-discovery
    networks:
      - edu-nexus-network

  edu-nexus-enrollment-service:
    image: edu-nexus-enrollment-service:latest
    container_name: edu-nexus-enrollment-service
    ports:
      - "8002:8002"
      - "9002:9002"
    depends_on:
      - edu-nexus-discovery
    networks:
      - edu-nexus-network

  edu-nexus-file-manage-service:
    image: edu-nexus-file-manage-service:latest
    container_name: edu-nexus-file-manage-service
    ports:
      - "8003:8003"
    depends_on:
      - edu-nexus-discovery
    networks:
      - edu-nexus-network

  edu-nexus-playback-service:
    image: edu-nexus-playback-service:latest
    container_name: edu-nexus-playback-service
    ports:
      - "8005:8005"
      - "9005:9005"
    depends_on:
      - edu-nexus-discovery
    networks:
      - edu-nexus-network

  edu-nexus-user-service:
    image: edu-nexus-user-service:latest
    container_name: edu-nexus-user-service
    ports:
      - "8004:8004"
    depends_on:
      - edu-nexus-discovery
    networks:
      - edu-nexus-network


networks:
  back-tier:  # Prometheus 스택 내부 네트워크
    driver: bridge
  front-tier:  # Grafana와 외부 간의 네트워크
  edu-nexus-network:
    driver: bridge